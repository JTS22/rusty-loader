name: Test x86_64

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying
  schedule:
    - cron: '0 0 * * 6'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Test x86_64
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [nightly]
        include:
          - os: macOS-latest
            rust: 'nightly'
            components: 'rust-src, llvm-tools-preview'
            targets: 'x86_64-apple-darwin'
          - os: ubuntu-latest
            rust: 'nightly'
            components: 'rust-src, llvm-tools-preview'
            targets: 'x86_64-unknown-linux-gnu'

    steps:
    - uses: hecrj/setup-rust-action@v1
      with: 
         rust-version: ${{ matrix.rust }}
         components: ${{ matrix.components || '' }}
         targets: ${{ matrix.targets || '' }}
    - uses: actions/checkout@v2
      with:
          lfs: true
    - name: Install QEMU, NASM (ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install qemu-system-x86 nasm
    - name: Install QEMU, NASM (macos)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install qemu nasm
    - name: Install QEMU, NASM, GNU make (windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        choco install qemu nasm make
        echo "C:\Program Files\qemu" >> $GITHUB_PATH
        echo "C:\Program Files\NASM" >> $GITHUB_PATH
    - name: Build
      run: make
    - name: Test loader
      run: |
        qemu-system-x86_64 -smp 1 \
          -cpu qemu64,apic,fsgsbase,rdtscp,xsave,xsaveopt,fxsr,rdrand \
          -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
          -display none -m 64M -serial stdio \
          -kernel target/x86_64-unknown-hermit-loader/debug/rusty-loader \
          -initrd data/x86_64/hello_world
